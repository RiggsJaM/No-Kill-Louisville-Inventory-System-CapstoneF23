@page "/CatFoodInventoryEntry"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using No_Kill_Inventory.Data
@rendermode InteractiveServer

@attribute [Authorize]

<PageTitle>Cat Food Inventory Entry</PageTitle>

<AuthorizeView>
    <Authorized>
        <h1>Cat Food Inventory Entry</h1>

        <div class="row">
            <div class="col-md4">
                <EditForm Model="Input" FormName="Cat" OnValidSubmit="() => HandleValidSubmit()" Context="editContext">
                    <DataAnnotationsValidator/>
                    @if (formSubmitted)
                    {
                        <div class="alert alert-success" role="alert">
                            Form successfully submitted!
                        </div>
                    }
                    <hr/>
                    <ValidationSummary class="text-danger" role="alert"/>

                    <table style="width:100%">
                        <tr>
                            <th>Food Type</th>
                            <th>Quantity (lbs)</th>
                        </tr>
                        <tr>
                            <td>Dry</td>
                            <td><InputNumber @bind-Value="Input.DryWeight"/>
                            </td>
                        </tr>
                        <tr>
                            <td>Wet</td>
                            <td><InputNumber @bind-Value="Input.WetWeight"/></td>
                        </tr>
                        <tr>
                            <td>Kitty</td>
                            <td><InputNumber @bind-Value="Input.KittyWeight"/></td>
                        </tr>
                        <tr>
                            <td>Special</td>
                            <td><InputNumber @bind-Value="Input.SpecialWeight"/></td>
                        </tr>


                    </table>
                    <button type="submit" class="btn btn-primary" @onclick="(() => { CatItemStore(1, Input.DryWeight); 
                                                                      CatItemStore(2, Input.KittyWeight); 
                                                                      CatItemStore(3, Input.WetWeight); 
                                                                      CatItemStore(4, Input.SpecialWeight); })">
                        Submit
                    </button>
                </EditForm>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    private bool formSubmitted = false;
    
    public Task HandleValidSubmit()
    {
        formSubmitted = true;
        Input = new InputModel(); // Clear form fields
        StateHasChanged();
        return Task.CompletedTask;
    }

    public async Task CatItemStore(int itemID, int qty)
    {
        using (var context = new ApplicationDbContext(new DbContextOptions<ApplicationDbContext>()))
        {
            var updateQty = context.CatItems.First(a => a.ItemID == itemID);
            {
                updateQty.Weight += qty;
                await context.SaveChangesAsync();
            }
        }
    }
    
    private sealed class InputModel
    {
        [Required(ErrorMessage = "Should input a number")]
        [Display(Name = "DryWeight")]
        public int DryWeight { get; set; }

        [Required(ErrorMessage = "Should input a number")]
        [Display(Name = "KittyWeight")]
        public int KittyWeight { get; set; }
        
        [Required(ErrorMessage = "Should input a number")]
        [Display(Name = "WetWeight")]
        public int WetWeight { get; set; }
        
        [Required(ErrorMessage = "Should input a number")]
        [Display(Name = "SpecialWeight")]
        public int SpecialWeight { get; set; }
    }
}